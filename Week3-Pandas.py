import pandas as pd
print("Pandas: Como usar la biblioteca y crear DataFrames")
print("")
Clientes=pd.DataFrame({"ID":[111,222,333,444,555,666],
                       "Nombre":["Luis","Venus","Cristina","Mariana","Luis","Luis"], #Crear una tabla con datos, como si fuese Excel
                       "Total [$]":[1000,10000,10000,1000,5000,7000],
                       "Antiguedad":[1,10,9,1,5,float("nan")]})
print(Clientes)
print(type(Clientes))
print("")
#Imprimir solo las primeras filas
print("Imprimir primeras dos filas usando .head()")
print(Clientes.head(2))
print("")
#Imprimir solo las ultimas filas
print("Imprimir ultimas dos filas usando .tail()")
print(Clientes.tail(2))
print("")
#Multiplicar columnas dentro del DataFrame 
print("Multiplicar las columnas Total*Antiguedad")
DineroTotal=Clientes["Total [$]"]*Clientes["Antiguedad"]
print(DineroTotal)
print("")
print("Imprimir la sumatoria total del dinero en el banco usando .sum()")
print("Dinero total en el banco={}".format(DineroTotal.sum()))
print("")
######################INFORMACIÓN DEL DATAFRAME########################
print("Imprimir las dimensiones dela matrizutilizando .shape")
print("La matriz tiene dimensiones:",Clientes.shape)
print("")
print("Obtener la información del DataFrame utilizando .info()")
print(Clientes.info())
print("")
print("Mostar columnnas con .columns y type con .dtypes")
print(Clientes.columns)
print("")
print(Clientes.dtypes)
print("")
####################Analisis rapido del DataFrame################

print("Imprimir analisis matematico rapido con .describe()")
print(Clientes.describe())
print("")
print("Imprimir analisis categorico rapido con .describe(include='object')")
print(Clientes.describe(include='object'))
print("")
######################FILTRAR COLUMNAS#####################
print("Imprimir la columna seleccionada con df['columna1']")
print(Clientes["Nombre"])
print("")
print("Seleccionar multiples columnas con df[['columna1','columna2']]")
print(Clientes[["Nombre","Total [$]"]])
print("")
print("Imprimir valores unicos dentro de una columna con df['columna'].unique()")
print(Clientes["Nombre"].unique())
print("")
print("Filtar columnas de acuerdo a valor que se busca usando: df[df['columna']=='valor']")
print(Clientes[Clientes["Nombre"]=="Luis"])
print("")
print("Filtrar DataFrame con dos parametros usando df[(df[columna1]=='valor1') & (df['columna2']=='valor2')]")
print(Clientes[(Clientes["Nombre"]=="Luis") & (Clientes["Total [$]"]==5000)])
print("")
print("Filtrar una fila especifica con .iloc[#]")
print(Clientes.iloc[4])
print("")
print("Filtar una fila y una columna esecifica con .iloc[#fila,#columna]")
print(Clientes.iloc[4,1])
print("")
print("Crear copia del DataFrame original utilizando .copy()")
Nombres=Clientes.copy()
print("")
print("Crear un index para despues filtar data especifica utilizando df.set_index('columna', inplace=False)")
Nombres=Nombres.set_index("Nombre",inplace=False)
print(Nombres)
print("")
print("Filtar por el index utilizando df.loc['valor']")
print(Nombres.loc["Luis"]) #Filtar por valores de Index
#####################QUITAR COLUMNAS Y FILAS CON NANS######################################33
ClientesSinNan=Clientes.copy()
print(ClientesSinNan.isnull().sum())
ClientesSinNan=ClientesSinNan.dropna(subset="Antiguedad")
print(ClientesSinNan)
Frecuencia=ClientesSinNan["Nombre"].value_counts()
print("")
print("")
MasCompras=Frecuencia.to_frame()
print(MasCompras)
MasCompras=MasCompras.reset_index()
print(MasCompras.iloc[0,0])